{"ast":null,"code":"var _jsxFileName = \"E:\\\\React API\\\\demo\\\\src\\\\Insert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insert = () => {\n  _s();\n  const txtname = useRef();\n  const txtemail = useRef();\n  const txtpassword = useRef();\n  const handleSubmit = async e => {\n    e.preventDefault(); // Stop default refresh\n\n    const name = txtname.current.value;\n    const email = txtemail.current.value;\n    const password = txtpassword.current.value;\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"email\", email);\n    formData.append(\"password\", password);\n    try {\n      const response = await axios.post(\"https://geton.skmbpk1z.a2hosted.com/insert-data.php\", formData);\n      console.log(\"Success:\", response.data);\n\n      // Optional: Clear inputs\n      txtname.current.value = \"\";\n      txtemail.current.value = \"\";\n      txtpassword.current.value = \"\";\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: txtname,\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      ref: txtemail,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      ref: txtpassword,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Insert, \"oB5hnUmwXbz+0PIfgD2Pv5BUBDc=\");\n_c = Insert;\nexport default Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useRef","axios","jsxDEV","_jsxDEV","Insert","_s","txtname","txtemail","txtpassword","handleSubmit","e","preventDefault","name","current","value","email","password","formData","FormData","append","response","post","console","log","data","error","onSubmit","children","type","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React API/demo/src/Insert.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Insert = () => {\r\n  const txtname = useRef();\r\n  const txtemail = useRef();\r\n  const txtpassword = useRef();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Stop default refresh\r\n\r\n    const name = txtname.current.value;\r\n    const email = txtemail.current.value;\r\n    const password = txtpassword.current.value;\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"email\", email);\r\n    formData.append(\"password\", password);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://geton.skmbpk1z.a2hosted.com/insert-data.php\",\r\n        formData\r\n      );\r\n      console.log(\"Success:\", response.data);\r\n\r\n      // Optional: Clear inputs\r\n      txtname.current.value = \"\";\r\n      txtemail.current.value = \"\";\r\n      txtpassword.current.value = \"\";\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" ref={txtname} placeholder=\"Name\" />\r\n      <input type=\"email\" ref={txtemail} placeholder=\"Email\" />\r\n      <input type=\"password\" ref={txtpassword} placeholder=\"Password\" />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Insert;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGN,MAAM,CAAC,CAAC;EACxB,MAAMO,QAAQ,GAAGP,MAAM,CAAC,CAAC;EACzB,MAAMQ,WAAW,GAAGR,MAAM,CAAC,CAAC;EAE5B,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;IAEpB,MAAMC,IAAI,GAAGN,OAAO,CAACO,OAAO,CAACC,KAAK;IAClC,MAAMC,KAAK,GAAGR,QAAQ,CAACM,OAAO,CAACC,KAAK;IACpC,MAAME,QAAQ,GAAGR,WAAW,CAACK,OAAO,CAACC,KAAK;IAE1C,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;IAC7BK,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,KAAK,CAAC;IAC/BE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAErC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAC/B,qDAAqD,EACrDJ,QACF,CAAC;MACDK,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAACI,IAAI,CAAC;;MAEtC;MACAlB,OAAO,CAACO,OAAO,CAACC,KAAK,GAAG,EAAE;MAC1BP,QAAQ,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE;MAC3BN,WAAW,CAACK,OAAO,CAACC,KAAK,GAAG,EAAE;IAChC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMuB,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBAC3BxB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,GAAG,EAAEvB,OAAQ;MAACwB,WAAW,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtD/B,OAAA;MAAOyB,IAAI,EAAC,OAAO;MAACC,GAAG,EAAEtB,QAAS;MAACuB,WAAW,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzD/B,OAAA;MAAOyB,IAAI,EAAC,UAAU;MAACC,GAAG,EAAErB,WAAY;MAACsB,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE/B,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC7B,EAAA,CAzCID,MAAM;AAAA+B,EAAA,GAAN/B,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}