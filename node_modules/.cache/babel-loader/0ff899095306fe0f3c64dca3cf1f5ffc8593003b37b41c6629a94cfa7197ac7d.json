{"ast":null,"code":"var _jsxFileName = \"E:\\\\React API\\\\demo\\\\src\\\\Insert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Insert = () => {\n  _s();\n  const txtname = useRef();\n  const txtemail = useRef();\n  const txtpassword = useRef();\n  const [data, setData] = useState([]);\n  const fetchdata = () => {\n    axios.get(\"https://geton.skmbpk1z.a2hosted.com/fetch-data.php\") // Make sure this URL exists\n    .then(res => {\n      setData(res.data);\n    }).catch(err => {\n      console.error(\"Error fetching data:\", err);\n    });\n  };\n  useEffect(() => {\n    fetchdata(); // Called once when component mounts\n  }, []);\n  const handlesubmit = e => {\n    e.preventDefault();\n    const name = txtname.current.value;\n    const email = txtemail.current.value;\n    const password = txtpassword.current.value;\n    const a = new FormData();\n    a.set(\"name\", name);\n    a.set(\"email\", email);\n    a.set(\"password\", password);\n    axios.post(\"https://geton.skmbpk1z.a2hosted.com/insert-data.php\", a).then(() => {\n      txtname.current.value = \"\";\n      txtemail.current.value = \"\";\n      txtpassword.current.value = \"\";\n      fetchdata(); // Refresh the displayed data\n    }).catch(err => {\n      console.error(\"Error inserting data:\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onSubmit: handlesubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: 1,\n        cellPadding: 7,\n        cellSpacing: 0.1,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: txtname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: txtemail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: txtpassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inserted Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: 1,\n      cellPadding: 7,\n      cellSpacing: 0.1,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Insert, \"KBe4ePEBMIfqaREUVa/u1TV36Os=\");\n_c = Insert;\nexport default Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Insert","_s","txtname","txtemail","txtpassword","data","setData","fetchdata","get","then","res","catch","err","console","error","handlesubmit","e","preventDefault","name","current","value","email","password","a","FormData","set","post","children","method","onSubmit","border","cellPadding","cellSpacing","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","map","item","index","id","_c","$RefreshReg$"],"sources":["E:/React API/demo/src/Insert.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Insert = () => {\r\n  const txtname = useRef();\r\n  const txtemail = useRef();\r\n  const txtpassword = useRef();\r\n  const [data, setData] = useState([]);\r\n\r\n  const fetchdata = () => {\r\n    axios.get(\"https://geton.skmbpk1z.a2hosted.com/fetch-data.php\") // Make sure this URL exists\r\n      .then((res) => {\r\n        setData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching data:\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchdata(); // Called once when component mounts\r\n  }, []);\r\n\r\n  const handlesubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const name = txtname.current.value;\r\n    const email = txtemail.current.value;\r\n    const password = txtpassword.current.value;\r\n\r\n    const a = new FormData();\r\n    a.set(\"name\", name);\r\n    a.set(\"email\", email);\r\n    a.set(\"password\", password);\r\n\r\n    axios\r\n      .post(\"https://geton.skmbpk1z.a2hosted.com/insert-data.php\", a)\r\n      .then(() => {\r\n        txtname.current.value = \"\";\r\n        txtemail.current.value = \"\";\r\n        txtpassword.current.value = \"\";\r\n\r\n        fetchdata(); // Refresh the displayed data\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error inserting data:\", err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form method=\"post\" onSubmit={handlesubmit}>\r\n        <table border={1} cellPadding={7} cellSpacing={0.1}>\r\n          <tbody>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td><input type=\"text\" ref={txtname} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Email</td>\r\n              <td><input type=\"text\" ref={txtemail} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Password</td>\r\n              <td><input type=\"text\" ref={txtpassword} /></td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input type=\"submit\" value={\"Submit\"} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Inserted Data</h2>\r\n      <table border={1} cellPadding={7} cellSpacing={0.1}>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item, index) => (\r\n            <tr key={index}>\r\n              <td>{item.id}</td> {/* Ensure your backend returns `id`, `name`, and `email` */}\r\n              <td>{item.name}</td>\r\n              <td>{item.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Insert;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}