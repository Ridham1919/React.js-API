{"ast":null,"code":"var _jsxFileName = \"E:\\\\React API\\\\demo\\\\src\\\\Insert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insert = () => {\n  _s();\n  // State to store submitted data\n  const [records, setRecords] = useState([]);\n\n  // Form refs\n  const txtname = useRef();\n  const txtemail = useRef();\n  const txtpassword = useRef();\n\n  // Form submission handler\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Get values from form\n    const name = txtname.current.value;\n    const email = txtemail.current.value;\n    const password = txtpassword.current.value;\n\n    // Create form data for API\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('password', password);\n\n    // Send data to server\n    axios.post('https://geton.skmbpk1z.a2hosted.com/insert-data.php', formData).then(response => {\n      // Add new record to state (with generated ID for table key)\n      const newRecord = {\n        id: Date.now(),\n        // Temporary ID for React keys\n        name: name,\n        email: email,\n        password: password\n      };\n\n      // Update state with new record\n      setRecords([...records, newRecord]);\n\n      // Clear form fields\n      txtname.current.value = '';\n      txtemail.current.value = '';\n      txtpassword.current.value = '';\n\n      // Optional: Show success message\n      alert(\"Data submitted successfully!\");\n    }).catch(error => {\n      console.error(\"Error submitting data:\", error);\n      alert(\"Error submitting data. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: 1,\n        cellPadding: 7,\n        cellSpacing: 0.1,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: txtname,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                ref: txtemail,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                ref: txtpassword,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 2,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"records-table\",\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Submitted Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), records.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        border: 1,\n        cellPadding: 7,\n        cellSpacing: 0.1,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: records.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: record.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 37\n            }, this)]\n          }, record.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No records submitted yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Insert, \"rnalHefAK4ZnXzp6Zak/ZpIYac4=\");\n_c = Insert;\nexport default Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","Insert","_s","records","setRecords","txtname","txtemail","txtpassword","handleSubmit","e","preventDefault","name","current","value","email","password","formData","FormData","set","post","then","response","newRecord","id","Date","now","alert","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","method","onSubmit","border","cellPadding","cellSpacing","type","ref","required","colSpan","style","marginTop","length","map","record","_c","$RefreshReg$"],"sources":["E:/React API/demo/src/Insert.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Insert = () => {\r\n    // State to store submitted data\r\n    const [records, setRecords] = useState([]);\r\n    \r\n    // Form refs\r\n    const txtname = useRef();\r\n    const txtemail = useRef();\r\n    const txtpassword = useRef();\r\n    \r\n    // Form submission handler\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Get values from form\r\n        const name = txtname.current.value;\r\n        const email = txtemail.current.value;\r\n        const password = txtpassword.current.value;\r\n        \r\n        // Create form data for API\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        \r\n        // Send data to server\r\n        axios.post('https://geton.skmbpk1z.a2hosted.com/insert-data.php', formData)\r\n            .then(response => {\r\n                // Add new record to state (with generated ID for table key)\r\n                const newRecord = {\r\n                    id: Date.now(), // Temporary ID for React keys\r\n                    name: name,\r\n                    email: email,\r\n                    password: password\r\n                };\r\n                \r\n                // Update state with new record\r\n                setRecords([...records, newRecord]);\r\n                \r\n                // Clear form fields\r\n                txtname.current.value = '';\r\n                txtemail.current.value = '';\r\n                txtpassword.current.value = '';\r\n                \r\n                // Optional: Show success message\r\n                alert(\"Data submitted successfully!\");\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error submitting data:\", error);\r\n                alert(\"Error submitting data. Please try again.\");\r\n            });\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Add New User</h2>\r\n            \r\n            {/* Input Form */}\r\n            <form method=\"post\" onSubmit={handleSubmit}>\r\n                <table border={1} cellPadding={7} cellSpacing={0.1}>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Name</td>\r\n                            <td><input type=\"text\" ref={txtname} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Email</td>\r\n                            <td><input type=\"email\" ref={txtemail} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Password</td>\r\n                            <td><input type=\"password\" ref={txtpassword} required /></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                <input type=\"submit\" value=\"Submit\" />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n            \r\n            {/* Data Display Table */}\r\n            <div className=\"records-table\" style={{ marginTop: '20px' }}>\r\n                <h3>Submitted Records</h3>\r\n                {records.length > 0 ? (\r\n                    <table border={1} cellPadding={7} cellSpacing={0.1}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Password</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {records.map(record => (\r\n                                <tr key={record.id}>\r\n                                    <td>{record.name}</td>\r\n                                    <td>{record.email}</td>\r\n                                    <td>{record.password}</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p>No records submitted yet.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Insert;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}