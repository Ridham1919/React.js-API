{"ast":null,"code":"var _jsxFileName = \"E:\\\\React API\\\\demo\\\\src\\\\Insert.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Insert = () => {\n  _s();\n  var txtname = useRef();\n  var txtemail = useRef();\n  var txtpassword = useRef();\n  const fetchdata = () => {\n    // Example: You can log or refresh something here\n    console.log(\"Fetching updated data...\");\n    // You may call a parent update function or trigger re-fetch here\n  };\n  const handlesubmit = e => {\n    e.preventDefault();\n    var name = txtname.current.value;\n    var email = txtemail.current.value;\n    var password = txtpassword.current.value;\n    var a = new FormData();\n    a.set(\"name\", name);\n    a.set(\"email\", email);\n    a.set(\"password\", password);\n    axios.post(\"https://geton.skmbpk1z.a2hosted.com/insert-data.php\", a).then(function () {\n      // Clear input fields\n      txtname.current.value = \"\";\n      txtemail.current.value = \"\";\n      txtpassword.current.value = \"\";\n\n      // Refresh table or data\n      fetchdata();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      onSubmit: handlesubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: 1,\n        cellPadding: 7,\n        cellSpacing: 0.1,\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: txtname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: txtemail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: txtpassword\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Insert, \"oB5hnUmwXbz+0PIfgD2Pv5BUBDc=\");\n_c = Insert;\nexport default Insert;\nvar _c;\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["React","useRef","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Insert","_s","txtname","txtemail","txtpassword","fetchdata","console","log","handlesubmit","e","preventDefault","name","current","value","email","password","a","FormData","set","post","then","children","method","onSubmit","border","cellPadding","cellSpacing","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","_c","$RefreshReg$"],"sources":["E:/React API/demo/src/Insert.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Insert = () => {\r\n  var txtname = useRef();\r\n  var txtemail = useRef();\r\n  var txtpassword = useRef();\r\n\r\n  const fetchdata = () => {\r\n    // Example: You can log or refresh something here\r\n    console.log(\"Fetching updated data...\");\r\n    // You may call a parent update function or trigger re-fetch here\r\n  };\r\n\r\n  const handlesubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    var name = txtname.current.value;\r\n    var email = txtemail.current.value;\r\n    var password = txtpassword.current.value;\r\n\r\n    var a = new FormData();\r\n    a.set(\"name\", name);\r\n    a.set(\"email\", email);\r\n    a.set(\"password\", password);\r\n\r\n    axios\r\n      .post(\"https://geton.skmbpk1z.a2hosted.com/insert-data.php\", a)\r\n      .then(function () {\r\n        // Clear input fields\r\n        txtname.current.value = \"\";\r\n        txtemail.current.value = \"\";\r\n        txtpassword.current.value = \"\";\r\n\r\n        // Refresh table or data\r\n        fetchdata();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form method=\"post\" onSubmit={handlesubmit}>\r\n        <table border={1} cellPadding={7} cellSpacing={0.1}>\r\n          <tbody>\r\n            <tr>\r\n              <td>Name</td>\r\n              <td>\r\n                <input type=\"text\" ref={txtname} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Email</td>\r\n              <td>\r\n                <input type=\"text\" ref={txtemail} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Password</td>\r\n              <td>\r\n                <input type=\"text\" ref={txtpassword} />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                <input type=\"submit\" value={\"submit\"} />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Insert;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}